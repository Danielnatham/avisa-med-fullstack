package br.ufs.avisamed.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CidadaoIdentificadoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCidadaoIdentificadoAllPropertiesEquals(CidadaoIdentificado expected, CidadaoIdentificado actual) {
        assertCidadaoIdentificadoAutoGeneratedPropertiesEquals(expected, actual);
        assertCidadaoIdentificadoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCidadaoIdentificadoAllUpdatablePropertiesEquals(CidadaoIdentificado expected, CidadaoIdentificado actual) {
        assertCidadaoIdentificadoUpdatableFieldsEquals(expected, actual);
        assertCidadaoIdentificadoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCidadaoIdentificadoAutoGeneratedPropertiesEquals(CidadaoIdentificado expected, CidadaoIdentificado actual) {
        assertThat(expected)
            .as("Verify CidadaoIdentificado auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCidadaoIdentificadoUpdatableFieldsEquals(CidadaoIdentificado expected, CidadaoIdentificado actual) {
        assertThat(expected)
            .as("Verify CidadaoIdentificado relevant properties")
            .satisfies(e -> assertThat(e.getIdUsuario()).as("check idUsuario").isEqualTo(actual.getIdUsuario()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCidadaoIdentificadoUpdatableRelationshipsEquals(CidadaoIdentificado expected, CidadaoIdentificado actual) {
        assertThat(expected)
            .as("Verify CidadaoIdentificado relationships")
            .satisfies(e -> assertThat(e.getUsuario()).as("check usuario").isEqualTo(actual.getUsuario()));
    }
}
