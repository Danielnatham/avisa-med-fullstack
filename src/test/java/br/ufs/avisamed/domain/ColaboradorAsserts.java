package br.ufs.avisamed.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ColaboradorAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertColaboradorAllPropertiesEquals(Colaborador expected, Colaborador actual) {
        assertColaboradorAutoGeneratedPropertiesEquals(expected, actual);
        assertColaboradorAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertColaboradorAllUpdatablePropertiesEquals(Colaborador expected, Colaborador actual) {
        assertColaboradorUpdatableFieldsEquals(expected, actual);
        assertColaboradorUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertColaboradorAutoGeneratedPropertiesEquals(Colaborador expected, Colaborador actual) {
        assertThat(expected)
            .as("Verify Colaborador auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertColaboradorUpdatableFieldsEquals(Colaborador expected, Colaborador actual) {
        assertThat(expected)
            .as("Verify Colaborador relevant properties")
            .satisfies(e -> assertThat(e.getIdDepartamento()).as("check idDepartamento").isEqualTo(actual.getIdDepartamento()))
            .satisfies(e -> assertThat(e.getIdUsuario()).as("check idUsuario").isEqualTo(actual.getIdUsuario()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertColaboradorUpdatableRelationshipsEquals(Colaborador expected, Colaborador actual) {
        assertThat(expected)
            .as("Verify Colaborador relationships")
            .satisfies(e -> assertThat(e.getUsuario()).as("check usuario").isEqualTo(actual.getUsuario()))
            .satisfies(e -> assertThat(e.getDepartamento()).as("check departamento").isEqualTo(actual.getDepartamento()));
    }
}
