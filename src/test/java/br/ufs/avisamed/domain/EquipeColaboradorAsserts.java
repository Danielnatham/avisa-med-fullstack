package br.ufs.avisamed.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EquipeColaboradorAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEquipeColaboradorAllPropertiesEquals(EquipeColaborador expected, EquipeColaborador actual) {
        assertEquipeColaboradorAutoGeneratedPropertiesEquals(expected, actual);
        assertEquipeColaboradorAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEquipeColaboradorAllUpdatablePropertiesEquals(EquipeColaborador expected, EquipeColaborador actual) {
        assertEquipeColaboradorUpdatableFieldsEquals(expected, actual);
        assertEquipeColaboradorUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEquipeColaboradorAutoGeneratedPropertiesEquals(EquipeColaborador expected, EquipeColaborador actual) {
        assertThat(expected)
            .as("Verify EquipeColaborador auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEquipeColaboradorUpdatableFieldsEquals(EquipeColaborador expected, EquipeColaborador actual) {
        assertThat(expected)
            .as("Verify EquipeColaborador relevant properties")
            .satisfies(e -> assertThat(e.getIdColaborador()).as("check idColaborador").isEqualTo(actual.getIdColaborador()))
            .satisfies(e -> assertThat(e.getIdEquipe()).as("check idEquipe").isEqualTo(actual.getIdEquipe()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEquipeColaboradorUpdatableRelationshipsEquals(EquipeColaborador expected, EquipeColaborador actual) {
        assertThat(expected)
            .as("Verify EquipeColaborador relationships")
            .satisfies(e -> assertThat(e.getEquipe()).as("check equipe").isEqualTo(actual.getEquipe()))
            .satisfies(e -> assertThat(e.getColaborador()).as("check colaborador").isEqualTo(actual.getColaborador()));
    }
}
